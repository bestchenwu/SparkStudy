sparkContext初始化是通过org.apache.spark.SparkContext里的try方法块里实现的.

在该方法体里面
_listenerBus = new LiveListenerBus(_conf)

    // Initialize the app status store and listener before SparkEnv is created so that it gets
    // all events.
    _statusStore = AppStatusStore.createLiveStore(conf)
    listenerBus.addToStatusQueue(_statusStore.listener.get)

    // Create the Spark execution environment (cache, map output tracker, etc)
    _env = createSparkEnv(_conf, isLocal, listenerBus)

通过初始化事件总线,并把事件总线传递给createEnv方法里


ContextCleaner用于环境变量的清除操作
 _cleaner =
      if (_conf.getBoolean("spark.cleaner.referenceTracking", true)) {
        Some(new ContextCleaner(this))
      } else {
        None
      }
    _cleaner.foreach(_.start())

在ContextCleaner里执行常驻线程cleaningThread的keepCleaning()方法
在ContextCleaner理提供了一系列类似于registerRDDForCleanup的方法,供外部dependency调用,它在一个类型为CleanupTaskWeakReference的
列表里注册一个引用,然后keepCleaning方法会扫描超时时间为ContextCleaner.REF_QUEUE_POLL_TIMEOUT的弱引用,并执行对应CleanupTask的不同清理方法.
如:doCleanupRDD等


SparkContext初始化完成后,会由客户端调用getOrCreate()方法->间接调用setActiveContext方法变成一个唯一可用的activeContext